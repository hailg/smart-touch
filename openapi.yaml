openapi: 3.0.3
info:
  title: Smart Touch
  description: |-
    Defines the API supported by Smart Touch. Application to allow anyone to manage their communication campain with their customers. 
    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: hello@developer.life
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://localhost:8080
tags:
  - name: contact
    description: Everything about your a Contact (Lead)
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /contacts:
    post:
      tags:
        - contact
      summary: Add a new Contact to the store
      description: Add a new Contact to the store
      operationId: addContact
      requestBody:
        description: Create a new contact in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'          
        '400':
          description: Invalid input
        '422':
          description: Validation exception
    get:
      summary: Get all contacts
      description: Returns all contacts from the system that the user has access to
      operationId: getContacts
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
components:
  schemas:
    Contact:
      required:
        - firstName
        - lastName
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 8208998b-ced6-44ee-87f3-08c489c78484
  requestBodies:
    Contact:
      description: Contact object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contact'
        application/xml:
          schema:
            $ref: '#/components/schemas/Contact'
            
            
            